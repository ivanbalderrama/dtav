{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Desktop/dtav/src/Components/VehicleHistory.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VehicleHistory(props) {\n  if (Object.keys(props.searched).length !== 0) {\n    const searchHistory = [];\n    searchHistory.push(props.searched);\n    console.log(searchHistory);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchHistory.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [data.years[0].year, \" \", data.make.name, \" \", data.model.name, \" \", data.engine.name, \" \", data.categories.vehicleStyle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = VehicleHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"VehicleHistory\");","map":{"version":3,"sources":["/Users/ivan/Desktop/dtav/src/Components/VehicleHistory.js"],"names":["React","VehicleHistory","props","Object","keys","searched","length","searchHistory","push","console","log","map","data","years","year","make","name","model","engine","categories","vehicleStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAI1C,MAAIC,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACG,QAAlB,EAA4BC,MAA5B,KAAuC,CAA3C,EAA8C;AAC1C,UAAMC,aAAa,GAAG,EAAtB;AACAA,IAAAA,aAAa,CAACC,IAAd,CAAmBN,KAAK,CAACG,QAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACA,wBACI;AAAA,gBACKA,aAAa,CAACI,GAAd,CAAmBC,IAAD,IAAU;AACzB,4BACI;AAAA,qBAAIA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcC,IAAlB,OAAyBF,IAAI,CAACG,IAAL,CAAUC,IAAnC,OAA0CJ,IAAI,CAACK,KAAL,CAAWD,IAArD,OAA4DJ,IAAI,CAACM,MAAL,CAAYF,IAAxE,OAA+EJ,IAAI,CAACO,UAAL,CAAgBC,YAA/F;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAIH,OALA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;AACJ;KAnBuBnB,c","sourcesContent":["import React from 'react';\n\nexport default function VehicleHistory(props) {\n    \n    \n    \n    if (Object.keys(props.searched).length !== 0) {\n        const searchHistory = [];\n        searchHistory.push(props.searched);\n        console.log(searchHistory);\n        return (\n            <div>\n                {searchHistory.map((data) => {\n                    return(\n                        <p>{data.years[0].year} {data.make.name} {data.model.name} {data.engine.name} {data.categories.vehicleStyle}</p>\n                                   \n                    )\n                })}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}